package SuanFa_200;

public class CountDigitOne_233 {
    public int countDigitOne(int n) {
        long ans = 0;
        long count;
        long rest;
        for (long i = 1; i <= n; i *= 10) {
            count = (n / (i * 10)) * i; // 分别统计个位的1  十位  百位.....
            //111   个位共计11个1，  '1', 1'1', 2'1', 3'1', 4'1', 5'1', 6'1', 7'1', 8'1', 9'1', 10'1'
            //只统计到小于等于110 多出为余数
            //111  十位有10个1, '1'0, '1'1, '1'2, '1'3, '1'4, '1'5, '1'6, '1'7, '1'8, '1'9
            rest = Math.min(Math.max(n % (i * 10) - (i - 1), 0), i);  // 1  0   // 10  9  //100 99
            //下面举例100和111的余数
            // 如果为负数则取余为0
            // 100  个位为0 无余数
            // 111  个位为1 有一个余数    111  第三位   11‘1’
            // 100  十位为0 无余数
            // 111  十位为1 有两个余数    110  111  中间位置1‘1’0 和1‘1’1
            // 100  百位为1 有一个余数    100  第一位‘1’00
            // 111  百位为1 有十二个余数  100....... 111  第一位 '1'00 ..........  '1'11
            ans += (count + rest);
        }
        return (int) ans;
    }
}
